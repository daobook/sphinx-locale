# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2021, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-20 19:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../development/tutorials/helloworld.rst:2
msgid "Developing a \"Hello world\" extension"
msgstr "开发一个 “Hello world” 插件"

#: ../../development/tutorials/helloworld.rst:4
msgid ""
"The objective of this tutorial is to create a very basic extension that "
"adds a new directive. This directive will output a paragraph containing "
"\"hello world\"."
msgstr ""
"本教程的目的是创建一个非常基本的扩展，增加一个新的指令。"
"这条指令将输出一个包含 “hello world” 的段落。"

#: ../../development/tutorials/helloworld.rst:7
msgid ""
"Only basic information is provided in this tutorial. For more "
"information, refer to the :doc:`other tutorials <index>` that go into "
"more details."
msgstr ""
"本教程中只提供了基本信息。更多信息，请参考 :doc:`其他教程 <index>`，其中有更多细节。"

#: ../../development/tutorials/helloworld.rst:12
msgid ""
"For this extension, you will need some basic understanding of docutils_ "
"and Python."
msgstr ""
"对于这个插件，你需要对 docutils_ 和 Python 有一些基本了解。"

#: ../../development/tutorials/helloworld.rst:17
msgid "Overview"
msgstr "概述"

#: ../../development/tutorials/helloworld.rst:19
msgid "We want the extension to add the following to Sphinx:"
msgstr "我们希望这个插件能给 Sphinx 增加以下内容："

#: ../../development/tutorials/helloworld.rst:21
msgid ""
"A ``helloworld`` directive, that will simply output the text \"hello "
"world\"."
msgstr ""
"一个 ``helloworld`` 指令，它将简单地输出文字 “hello world”。"

#: ../../development/tutorials/helloworld.rst:25
msgid "Prerequisites"
msgstr "前提条件"

#: ../../development/tutorials/helloworld.rst:27
msgid ""
"We will not be distributing this plugin via `PyPI`_ and will instead "
"include it as part of an existing project. This means you will need to "
"use an existing project or create a new one using :program:`sphinx-"
"quickstart`."
msgstr ""
"我们不会通过 `PyPI`_ 来发布这个插件，而是将其作为现有项目的一部分。"
"这意味着你需要使用一个现有的项目或使用 :program:`sphinx-quickstart` 创建一个新的项目。"

#: ../../development/tutorials/helloworld.rst:31
msgid ""
"We assume you are using separate source (:file:`source`) and build "
"(:file:`build`) folders. Your extension file could be in any folder of "
"your project. In our case, let's do the following:"
msgstr ""
"我们假设你在使用独立的源文件（:file:`source`）和构建文件（:file:`build`）文件夹。"
"你的插件文件可以在你项目的任何文件夹中。在我们的例子中，让我们做以下事情："

#: ../../development/tutorials/helloworld.rst:35
msgid "Create an :file:`_ext` folder in :file:`source`"
msgstr "在 :file:`source` 中创建一个 :file:`_ext` 文件夹"

#: ../../development/tutorials/helloworld.rst:36
msgid ""
"Create a new Python file in the :file:`_ext` folder called "
":file:`helloworld.py`"
msgstr ""
"在 :file:`_ext` 文件夹下创建一个新的 Python 文件，名为 :file:`helloworld.py`"

#: ../../development/tutorials/helloworld.rst:39
msgid "Here is an example of the folder structure you might obtain:"
msgstr "下面是一个你可能获得的文件夹结构的例子："

#: ../../development/tutorials/helloworld.rst:55
msgid "Writing the extension"
msgstr "编写插件"

#: ../../development/tutorials/helloworld.rst:57
msgid "Open :file:`helloworld.py` and paste the following code in it:"
msgstr "打开 :file:`helloworld.py` 并在其中粘贴以下代码："

#: ../../development/tutorials/helloworld.rst:63
msgid ""
"Some essential things are happening in this example, and you will see "
"them for all directives."
msgstr ""
"在这个例子中发生了一些基本的事情，对于所有的指令，你都会看到它们。"

#: ../../development/tutorials/helloworld.rst:67
msgid "The directive class"
msgstr "指令类"

#: ../../development/tutorials/helloworld.rst:68
msgid "Our new directive is declared in the ``HelloWorld`` class."
msgstr "我们的新指令是在 ``HelloWorld`` 类中声明的。"

#: ../../development/tutorials/helloworld.rst:75
msgid ""
"This class extends the docutils_' ``Directive`` class. All extensions "
"that create directives should extend this class."
msgstr ""
"该类扩展了 docutils_ ``Directive`` 类。所有创建指令的插件都应该扩展这个类。"

#: ../../development/tutorials/helloworld.rst:80
msgid ""
"`The docutils documentation on creating directives <docutils "
"directives_>`_"
msgstr ""
"`关于创建指令的 docutils 文档 <docutils 指令_>`_"

#: ../../development/tutorials/helloworld.rst:82
msgid ""
"This class contains a ``run`` method.  This method is a requirement and "
"it is part of every directive.  It contains the main logic of the "
"directive and it returns a list of docutils nodes to be processed by "
"Sphinx. These nodes are docutils' way of representing the content of a "
"document. There are many types of nodes available: text, paragraph, "
"reference, table, etc."
msgstr ""
"该类包含一个 ``run`` 方法。"
"这个方法是一个需求，它是每个指令的一部分。"
"它包含指令的主要逻辑，并返回一个由 Sphinx 处理的 docutils 节点的列表。"
"这些节点是 docutils 表示文档内容的方式。"
"有许多类型的节点可用：text、paragraph、reference、table 等。"

#: ../../development/tutorials/helloworld.rst:90
msgid "`The docutils documentation on nodes <docutils nodes_>`_"
msgstr "`节点上的 docutils 文档 <docutils nodes_>`_"

#: ../../development/tutorials/helloworld.rst:92
msgid ""
"The ``nodes.paragraph`` class creates a new paragraph node. A paragraph "
"node typically contains some text that we can set during instantiation "
"using the ``text`` parameter."
msgstr ""
"``nodes.paragraph`` 类创建一个新的段落节点。"
"一个段落节点通常包含一些文本，我们可以在实例化过程中使用 ``text`` 参数来设置。"

#: ../../development/tutorials/helloworld.rst:97
msgid "The ``setup`` function"
msgstr "``setup`` 函数"

#: ../../development/tutorials/helloworld.rst:100
msgid ""
"This function is a requirement. We use it to plug our new directive into "
"Sphinx."
msgstr ""
"这个函数是一个需求。我们用它来把我们的新指令插入 Sphinx。"

#: ../../development/tutorials/helloworld.rst:108
msgid ""
"The simplest thing you can do it call the :meth:`~Sphinx.add_directive` "
"method, which is what we've done here. For this particular call, the "
"first argument is the name of the directive itself as used in a reST "
"file. In this case, we would use ``helloworld``. For example:"
msgstr ""
"你能做的最简单的事情就是调用 :meth:`~Sphinx.add_directive` 方法，"
"这就是我们在这里做的。"
"对于这个特殊的调用，第一个参数是 reST 文件中使用的指令本身的名字。"
"在这种情况下，我们会使用 ``helloworld``。比如说："

#: ../../development/tutorials/helloworld.rst:121
msgid ""
"We also return the :ref:`extension metadata <ext-metadata>` that "
"indicates the version of our extension, along with the fact that it is "
"safe to use the extension for both parallel reading and writing."
msgstr ""
"我们还返回 :ref:`插件元数据 <ext-metadata>`，"
"表明我们的插件版本，以及使用插件进行并行读写都是安全的。"

#: ../../development/tutorials/helloworld.rst:127
msgid "Using the extension"
msgstr "使用插件"

#: ../../development/tutorials/helloworld.rst:129
msgid ""
"The extension has to be declared in your :file:`conf.py` file to make "
"Sphinx aware of it. There are two steps necessary here:"
msgstr ""
"扩展名必须在你的 :file:`conf.py` 文件中声明，以使 Sphinx 知道它。"
"这里有两个必要的步骤："

#: ../../development/tutorials/helloworld.rst:132
msgid ""
"Add the :file:`_ext` directory to the `Python path`_ using "
"``sys.path.append``. This should be placed at the top of the file."
msgstr ""
"使用 ``sys.path.append`` 将 :file:`_ext` 目录添加到 `Python 路径`_。"
"这应该放在文件的顶部。"

#: ../../development/tutorials/helloworld.rst:135
msgid ""
"Update or create the :confval:`extensions` list and add the extension "
"file name to the list"
msgstr ""
"更新或创建 :confval:`extensions` 列表，并将插件添加到该列表中"

#: ../../development/tutorials/helloworld.rst:138
msgid "For example:"
msgstr "例如："

#: ../../development/tutorials/helloworld.rst:151
msgid ""
"We're not distributing this extension as a `Python package`_, we need to "
"modify the `Python path`_ so Sphinx can find our extension. This is why "
"we need the call to ``sys.path.append``."
msgstr ""
"我们没有把这个插件作为 `Python 包`_ 发布，我们需要修改 `Python 路径`_，"
"以便 Sphinx 能找到我们的插件。这就是为什么我们需要调用 `sys.path.append`。"

#: ../../development/tutorials/helloworld.rst:155
msgid "You can now use the extension in a file. For example:"
msgstr "现在你可以在文件中使用插件。比如说："

#: ../../development/tutorials/helloworld.rst:165
msgid "The sample above would generate:"
msgstr "上面的例子会输出："

#: ../../development/tutorials/helloworld.rst:177
msgid "Further reading"
msgstr "深入阅读"

#: ../../development/tutorials/helloworld.rst:179
msgid ""
"This is the very basic principle of an extension that creates a new "
"directive."
msgstr "这是创造一个新指令的插件的非常基本的原则。"

#: ../../development/tutorials/helloworld.rst:181
msgid "For a more advanced example, refer to :doc:`todo`."
msgstr "关于更高级的例子，请参考 :doc:`todo`。"

