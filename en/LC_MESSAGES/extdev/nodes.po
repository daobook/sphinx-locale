# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2021, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-20 19:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../extdev/nodes.rst:4
msgid "Doctree node classes added by Sphinx"
msgstr ""

#: ../../extdev/nodes.rst:9
msgid "Nodes for domain-specific object descriptions"
msgstr ""

#: ../../extdev/nodes.rst:12
msgid "Top-level nodes"
msgstr ""

#: ../../extdev/nodes.rst:14
msgid "These nodes form the top-most levels of object descriptions."
msgstr ""

#: of sphinx.addnodes.desc:1
msgid "Node for a list of object signatures and a common description of them."
msgstr ""

#: of sphinx.addnodes.desc:3
msgid ""
"Contains one or more :py:class:`desc_signature` nodes and then a single "
":py:class:`desc_content` node."
msgstr ""

#: of sphinx.addnodes.desc:6
msgid "This node always has two classes:"
msgstr ""

#: of sphinx.addnodes.desc:8
msgid "The name of the domain it belongs to, e.g., ``py`` or ``cpp``."
msgstr ""

#: of sphinx.addnodes.desc:9
msgid "The name of the object type in the domain, e.g., ``function``."
msgstr ""

#: of sphinx.addnodes.desc_signature:1
msgid "Node for a single object signature."
msgstr ""

#: of sphinx.addnodes.desc_signature:3
msgid ""
"As default the signature is a single-line signature. Set ``is_multiline ="
" True`` to describe a multi-line signature. In that case all child nodes "
"must be :py:class:`desc_signature_line` nodes."
msgstr ""

#: of sphinx.addnodes.desc_signature:7
msgid ""
"This node always has the classes ``sig``, ``sig-object``, and the domain "
"it belongs to."
msgstr ""

#: of sphinx.addnodes.desc_signature_line:1
msgid "Node for a line in a multi-line object signature."
msgstr ""

#: of sphinx.addnodes.desc_signature_line:3
msgid ""
"It should only be used as a child of a :py:class:`desc_signature` with "
"``is_multiline`` set to ``True``. Set ``add_permalink = True`` for the "
"line that should get the permalink."
msgstr ""

#: of sphinx.addnodes.desc_content:1
msgid "Node for object description content."
msgstr ""

#: of sphinx.addnodes.desc_content:3
msgid "Must be the last child node in a :py:class:`desc` node."
msgstr ""

#: of sphinx.addnodes.desc_inline:1
msgid "Node for a signature fragment in inline text."
msgstr ""

#: of sphinx.addnodes.desc_inline:3
msgid "This is for example used for roles like :rst:role:`cpp:expr`."
msgstr ""

#: of sphinx.addnodes.desc_inline:5
msgid ""
"This node always has the classes ``sig``, ``sig-inline``, and the name of"
" the domain it belongs to."
msgstr ""

#: ../../extdev/nodes.rst:23
msgid "Nodes for high-level structure in signatures"
msgstr ""

#: ../../extdev/nodes.rst:25
msgid ""
"These nodes occur in in non-multiline :py:class:`desc_signature` nodes "
"and in :py:class:`desc_signature_line` nodes."
msgstr ""

#: of sphinx.addnodes.desc_name:1
msgid "Node for the main object name."
msgstr ""

#: of sphinx.addnodes.desc_name:3
msgid ""
"For example, in the declaration of a Python class ``MyModule.MyClass``, "
"the main name is ``MyClass``."
msgstr ""

#: of sphinx.addnodes.desc_name:6
msgid "This node always has the class ``sig-name``."
msgstr ""

#: of sphinx.addnodes.desc_addname:1
msgid "Node for additional name parts for an object."
msgstr ""

#: of sphinx.addnodes.desc_addname:3
msgid ""
"For example, in the declaration of a Python class ``MyModule.MyClass``, "
"the additional name part is ``MyModule.``."
msgstr ""

#: of sphinx.addnodes.desc_addname:6
msgid "This node always has the class ``sig-prename``."
msgstr ""

#: of sphinx.addnodes.desc_type:1
msgid "Node for return types or object type names."
msgstr ""

#: of sphinx.addnodes.desc_returns:1
msgid "Node for a \"returns\" annotation (a la -> in Python)."
msgstr ""

#: of sphinx.addnodes.desc_parameterlist:1
msgid "Node for a general parameter list."
msgstr ""

#: of sphinx.addnodes.desc_parameter:1
msgid "Node for a single parameter."
msgstr ""

#: of sphinx.addnodes.desc_optional:1
msgid "Node for marking optional parts of the parameter list."
msgstr ""

#: of sphinx.addnodes.desc_annotation:1
msgid "Node for signature annotations (not Python 3-style annotations)."
msgstr ""

#: ../../extdev/nodes.rst:39
msgid "New admonition-like constructs"
msgstr ""

#: of sphinx.addnodes.versionmodified:1
msgid "Node for version change entries."
msgstr ""

#: of sphinx.addnodes.versionmodified:3
msgid ""
"Currently used for \"versionadded\", \"versionchanged\" and "
"\"deprecated\" directives."
msgstr ""

#: of sphinx.addnodes.seealso:1
msgid "Custom \"see also\" admonition."
msgstr ""

#: ../../extdev/nodes.rst:45
msgid "Other paragraph-level nodes"
msgstr ""

#: of sphinx.addnodes.compact_paragraph:1
msgid "Node for a compact paragraph (which never makes a <p> node)."
msgstr ""

#: ../../extdev/nodes.rst:50
msgid "New inline nodes"
msgstr ""

#: of sphinx.addnodes.index:1
msgid "Node for index entries."
msgstr ""

#: of sphinx.addnodes.index:3
msgid ""
"This node is created by the ``index`` directive and has one attribute, "
"``entries``.  Its value is a list of 5-tuples of ``(entrytype, entryname,"
" target, ignored, key)``."
msgstr ""

#: of sphinx.addnodes.index:7
msgid "*entrytype* is one of \"single\", \"pair\", \"double\", \"triple\"."
msgstr ""

#: of sphinx.addnodes.index:9
msgid ""
"*key* is categorization characters (usually a single character) for "
"general index page. For the details of this, please see also: "
":rst:dir:`glossary` and issue #2320."
msgstr ""

#: of sphinx.addnodes.pending_xref:1
msgid ""
"Node for cross-references that cannot be resolved without complete "
"information about all documents."
msgstr ""

#: of sphinx.addnodes.pending_xref:4
msgid ""
"These nodes are resolved before writing output, in "
"BuildEnvironment.resolve_references."
msgstr ""

#: of sphinx.addnodes.pending_xref_condition:1
msgid ""
"Node for cross-references that are used to choose appropriate content of "
"the reference by conditions on the resolving phase."
msgstr ""

#: of sphinx.addnodes.pending_xref_condition:4
msgid ""
"When the :py:class:`pending_xref` node contains one or more "
"**pending_xref_condition** nodes, the cross-reference resolver should "
"choose the content of the reference using defined conditions in "
"``condition`` attribute of each pending_xref_condition nodes::"
msgstr ""

#: of sphinx.addnodes.pending_xref_condition:17
msgid ""
"After the processing of cross-reference resolver, one of the content node"
" under pending_xref_condition node is chosen by its condition and to be "
"removed all of pending_xref_condition nodes::"
msgstr ""

#: of sphinx.addnodes.pending_xref_condition:31
msgid ""
"This node is only allowed to be placed under pending_xref node. It is not"
" allows to place it under other nodes.  In addition, pending_xref node "
"must contain only pending_xref_condition nodes if it contains one or more"
" pending_xref_condition nodes."
msgstr ""

#: of sphinx.addnodes.pending_xref_condition:36
msgid ""
"The pending_xref_condition node should have **condition** attribute. "
"Domains can be store their individual conditions into the attribute to "
"filter contents on resolving phase.  As a reserved condition name, "
"``condition=\"*\"`` is used for the fallback of resolution failure. "
"Additionally, as a recommended condition name, ``condition=\"resolved\"``"
" is used for the representation of resolstion success in the intersphinx "
"module."
msgstr ""

#: of sphinx.addnodes.literal_emphasis:1
msgid ""
"Node that behaves like `emphasis`, but further text processors are not "
"applied (e.g. smartypants for HTML output)."
msgstr ""

#: of sphinx.addnodes.download_reference:1
msgid "Node for download references, similar to pending_xref."
msgstr ""

#: ../../extdev/nodes.rst:59
msgid "Special nodes"
msgstr ""

#: of sphinx.addnodes.only:1
msgid "Node for \"only\" directives (conditional inclusion based on tags)."
msgstr ""

#: of sphinx.addnodes.meta:1
msgid ""
"Node for meta directive -- same as docutils' standard meta node, but "
"pickleable."
msgstr ""

#: of sphinx.addnodes.highlightlang:1
msgid ""
"Inserted to set the highlight language and line number options for "
"subsequent code blocks."
msgstr ""

#: ../../extdev/nodes.rst:65
msgid "You should not need to generate the nodes below in extensions."
msgstr ""

#: of sphinx.addnodes.glossary:1
msgid "Node to insert a glossary."
msgstr ""

#: of sphinx.addnodes.toctree:1
msgid "Node for inserting a \"TOC tree\"."
msgstr ""

#: of sphinx.addnodes.start_of_file:1
msgid "Node to mark start of a new file, used in the LaTeX builder only."
msgstr ""

#: of sphinx.addnodes.productionlist:1
msgid "Node for grammar production lists."
msgstr ""

#: of sphinx.addnodes.productionlist:3
msgid "Contains ``production`` nodes."
msgstr ""

#: of sphinx.addnodes.production:1
msgid "Node for a single grammar production rule."
msgstr ""

